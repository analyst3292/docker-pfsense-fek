#///////////////////////////////////////////////#
#/  FileName    : 11-pfsense-filter.conf
#/  Description : Logstash Configuration File
#///////////////////////////////////////////////#
#
# PFSense filters
#

filter {
  if "PFSense" in [tags] {
    grok {
      add_tag => [ "firewall" ]
      match => [ "message", "<(?<evtid>.*)>(?<datetime>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\s+(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:[0-5][0-9])) (?<prog>.*?): (?<msg>.*)" ]
    }
    mutate {
      gsub => ["datetime","  "," "]
    }
    date {
      match => [ "datetime", "MMM dd HH:mm:ss" ]
      timezone => "UTC"
    }
    mutate {
      replace => [ "message", "%{msg}" ]
    }
    mutate {
      remove_field => [ "msg", "datetime" ]
    }
  }
  if [prog] =~ /^filterlog$/ {
      mutate {
        remove_field => [ "msg", "datetime" ]
      }
      grok {
        patterns_dir => "/etc/logstash/conf.d/patterns"
        match => [ "message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}",
           "message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}" ]
        match => [ "message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}",
           "message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}" ]
      }
      if [src_ip] =~ /^(224|232|233|239|fe80|ff02)/ {
        if "PFSense" not in [tags] {
          mutate {
            add_tag => [ "PFSenseDrop" ]
          }
        }
      }
      if [src_ip] =~ /^(224|232|233|239|fe80|ff02)/ {
        if "PFSense" not in [tags] {
          mutate {
            add_tag => [ "PFSenseDrop" ]
          
      }

      if "PFSenseDrop" in [tags] {
        drop {}
      }
      if [rule_direction] == "out" and [dest_port] == "53" {
        drop {}
      }

      mutate {
        lowercase => [ 'proto' ]
      }
      if [proto_id] == "112"  {
        drop { }
      } else {
      geoip {
          database => "/etc/logstash/GeoLite/GeoLite2-City.mmdb"
          source   => "src_ip"
          add_tag  => [ "GeoIP" ]
        }
        mutate {
          add_field => { "src_ip_fqdn"  => "%{src_ip}"  }
          add_field => { "dest_ip_fqdn" => "%{dest_ip}" }
        }
        dns {
          reverse => [ "src_ip_fqdn" ]
          action  => "replace"

          failed_cache_size => "5"
          failed_cache_ttl  => "5"
          hit_cache_size    => "5"
          hit_cache_ttl     => "60"
          max_retries       => "3"
          timeout           => "0.5"
        }
        if [src_ip] == [src_ip_fqdn] {
          mutate {
            remove_field => [ "src_ip_fqdn" ]
          }
        } else if "FQDN" not in [tags] {
          mutate {
            add_tag => [ "FQDN" ]
          }
        }
        dns {
          reverse => [ "dest_ip_fqdn" ]
          action  => "replace"

          failed_cache_size => "5"
          failed_cache_ttl  => "5"
          hit_cache_size    => "5"
          hit_cache_ttl     => "60"
          max_retries       => "3"
          timeout           => "0.5"
        }
        if [dest_ip] == [dest_ip_fqdn] {
          mutate {
            remove_field => [ "dest_ip_fqdn" ]
          }
        } else if "FQDN" not in [tags] {
          mutate {
            add_tag => [ "FQDN" ]
          }
        }
      }
  }
}